name: Security Scan

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit flask flask-sqlalchemy flask-wtf wtforms python-dotenv markupsafe

    - name: Run Bandit security scan
      id: bandit
      run: |
        bandit -r . -c bandit.yml -f json -o bandit-results.json; echo "Bandit scan completed"

    - name: Check Bandit results
      run: |
        # Проверяем наличие критических уязвимостей
        if ! python -c "
        import json
        with open('bandit-results.json', 'r') as f:
            data = json.load(f)
        critical_issues = [issue for issue in data.get('results', []) 
                          if issue.get('issue_confidence') == 'HIGH' 
                          and issue.get('issue_severity') in ['HIGH', 'MEDIUM']]
        print(f'Найдено критических уязвимостей: {len(critical_issues)}')
        for issue in critical_issues:
            print(f'- {issue[\"test_name\"]}: {issue[\"issue_text\"]}')
        exit(len(critical_issues) > 0)
        "; then
          echo "❌ Обнаружены критические уязвимости безопасности!"
          echo "Пожалуйста, исправьте их перед слиянием кода."
          exit 1
        else
          echo "✅ Критических уязвимостей не обнаружено"
        fi

    - name: Upload Bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-security-report
        path: bandit-results.json